// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	withdrawals "github.com/magmel48/go-musthave-diploma/internal/withdrawals"
	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, userID, orderNumber, amount
func (_m *Repository) Create(ctx context.Context, userID int64, orderNumber string, amount float64) error {
	ret := _m.Called(ctx, userID, orderNumber, amount)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, string, float64) error); ok {
		r0 = rf(ctx, userID, orderNumber, amount)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListByUser provides a mock function with given fields: ctx, userID
func (_m *Repository) ListByUser(ctx context.Context, userID int64) ([]withdrawals.Withdrawal, error) {
	ret := _m.Called(ctx, userID)

	var r0 []withdrawals.Withdrawal
	if rf, ok := ret.Get(0).(func(context.Context, int64) []withdrawals.Withdrawal); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]withdrawals.Withdrawal)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
